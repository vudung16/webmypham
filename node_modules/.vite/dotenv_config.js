import {
  require_main
} from "./chunk-E5YZ6EEZ.js";
import {
  __commonJS,
  define_process_env_default,
  init_define_process_env
} from "./chunk-KP4UBDXM.js";

// node_modules/dotenv/lib/env-options.js
var require_env_options = __commonJS({
  "node_modules/dotenv/lib/env-options.js"(exports, module) {
    init_define_process_env();
    var options = {};
    if (define_process_env_default.DOTENV_CONFIG_ENCODING != null) {
      options.encoding = define_process_env_default.DOTENV_CONFIG_ENCODING;
    }
    if (define_process_env_default.DOTENV_CONFIG_PATH != null) {
      options.path = define_process_env_default.DOTENV_CONFIG_PATH;
    }
    if (define_process_env_default.DOTENV_CONFIG_DEBUG != null) {
      options.debug = define_process_env_default.DOTENV_CONFIG_DEBUG;
    }
    if (define_process_env_default.DOTENV_CONFIG_OVERRIDE != null) {
      options.override = define_process_env_default.DOTENV_CONFIG_OVERRIDE;
    }
    module.exports = options;
  }
});

// node_modules/dotenv/lib/cli-options.js
var require_cli_options = __commonJS({
  "node_modules/dotenv/lib/cli-options.js"(exports, module) {
    init_define_process_env();
    var re = /^dotenv_config_(encoding|path|debug|override)=(.+)$/;
    module.exports = function optionMatcher(args) {
      return args.reduce(function(acc, cur) {
        const matches = cur.match(re);
        if (matches) {
          acc[matches[1]] = matches[2];
        }
        return acc;
      }, {});
    };
  }
});

// node_modules/dotenv/config.js
var require_config = __commonJS({
  "node_modules/dotenv/config.js"() {
    init_define_process_env();
    (function() {
      require_main().config(Object.assign({}, require_env_options(), require_cli_options()(process.argv)));
    })();
  }
});

// dep:dotenv_config
init_define_process_env();
var dotenv_config_default = require_config();
export {
  dotenv_config_default as default
};
//# sourceMappingURL=dotenv_config.js.map
